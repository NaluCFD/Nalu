#
# Edited by Marc T. Henry de Frahan to compile Trilinos with the intel compilers (16 here)
# Based on do-configTrilinos_release-intel in Nalu
#

# The base directory where mpi is located.  
# From here you should be able to find include/mpi.h bin/mpicxx, bin/mpiexec, etc.
mpi_base_dir=/nopt/intel/16.0/compilers_and_libraries_2016.2.181/linux/mpi/intel64
nalu_build_dir=/home/mhenryde/nalu-build-intel

# Note: Don't forget to set your LD_LIBRARY_PATH to $mpi_base_dir/lib
#       You may also need to add to LD_LIBRARY_PATH the lib directory for the compiler
#       used to create the mpi executables.

# TPLS needed by trilinos, possibly provided by HomeBrew on a Mac
#boost_dir=/usr/local/Cellar/boost/1.56.0/include/boost/
#superlu_inc_dir=/usr/local/Cellar/superlu/4.3/include/superlu
#superlu_lib_dir=/usr/local/Cellar/superlu/4.3/lib
boost_dir=$nalu_build_dir
superlu_inc_dir=$nalu_build_dir/SuperLU_4.3/include
superlu_lib_dir=$nalu_build_dir/SuperLU_4.3/lib

# Additional needed TPLS
netcdf_install_dir=$nalu_build_dir
hdf_install_dir=$nalu_build_dir
parallel_netcdf_install_dir=$nalu_build_dir
z_install_dir=$nalu_build_dir

# MKL libraries for BLAS/LAPACK
intel_mkl_dir=/nopt/intel/16.0/compilers_and_libraries_2016.2.181/linux/mkl/lib/intel64

# Where trilinos will be installed
trilinos_install_dir=$nalu_build_dir

echo "nalu_build_dir = \"$nalu_build_dir\""

EXTRA_ARGS=$@

# Cleanup old cache before we configure
# Note:  This does not remove files produced by make.  Use "make clean" for this.
find . -name "CMakeFiles" -exec rm -rf {} \;
rm -f CMakeCache.txt

cmake \
-DCMAKE_INSTALL_PREFIX=$trilinos_install_dir \
-DCMAKE_BUILD_TYPE=RELEASE \
  -DCMAKE_CXX_COMPILER:FILEPATH="${mpi_base_dir}/bin/mpiicpc" \
  -DCMAKE_C_COMPILER:FILEPATH="${mpi_base_dir}/bin/mpiicc" \
  -DCMAKE_Fortran_COMPILER:FILEPATH="${mpi_base_dir}/bin/mpiifort" \
  -DCMAKE_AR:FILEPATH=/nopt/intel/16.0/compilers_and_libraries_2016.2.181/linux/bin/intel64/xiar \
  -DCMAKE_LINKER:FILEPATH=/nopt/intel/16.0/compilers_and_libraries_2016.2.181/linux/bin/intel64/xild \
  -DCMAKE_CXX_FLAGS:STRING="-O3 -DMPICH_IGNORE_CXX_SEEK -DMPICH_SKIP_MPICXX -restrict -fasm-blocks" \
  -DCMAKE_C_FLAGS:STRING="-O3 -DMPICH_IGNORE_CXX_SEEK -DMPICH_SKIP_MPICXX -restrict -fasm-blocks" \
  -DCMAKE_Fortran_FLAGS:STRING="-O3" \
\
-DTrilinos_ENABLE_CXX11=ON \
-DTrilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=ON \
-DTpetra_INST_DOUBLE:BOOL=ON \
-DTpetra_INST_INT_LONG:BOOL=ON \
-DTpetra_INST_COMPLEX_DOUBLE=OFF \
-DTrilinos_ENABLE_TESTS:BOOL=OFF \
-DTrilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF \
-DTrilinos_ALLOW_NO_PACKAGES:BOOL=OFF \
-DTPL_ENABLE_MPI=ON \
  -DMPI_BASE_DIR:PATH=$mpi_base_dir \
-DTPL_ENABLE_SuperLU=ON \
  -DSuperLU_INCLUDE_DIRS:PATH=$superlu_inc_dir \
  -DSuperLU_LIBRARY_DIRS:PATH=$superlu_lib_dir \
-DTrilinos_ENABLE_Epetra:BOOL=ON \
-DTrilinos_ENABLE_Tpetra:BOOL=ON \
-DTrilinos_ENABLE_ML:BOOL=ON \
-DTrilinos_ENABLE_MueLu:BOOL=ON \
-DTrilinos_ENABLE_EpetraExt:BOOL=ON \
-DTrilinos_ENABLE_AztecOO:BOOL=ON \
-DTrilinos_ENABLE_Belos:BOOL=ON \
-DTrilinos_ENABLE_Ifpack2:BOOL=ON \
-DTrilinos_ENABLE_Amesos2:BOOL=ON \
-DTrilinos_ENABLE_Zoltan2:BOOL=ON \
-DTrilinos_ENABLE_Ifpack:BOOL=ON \
-DTrilinos_ENABLE_Amesos:BOOL=ON \
-DTrilinos_ENABLE_Zoltan:BOOL=ON \
-DTrilinos_ENABLE_STKMesh:BOOL=ON \
-DTrilinos_ENABLE_STKIO:BOOL=ON \
-DTrilinos_ENABLE_STKTransfer:BOOL=ON \
-DTrilinos_ENABLE_STKSearch:BOOL=ON \
-DTrilinos_ENABLE_STKUtil:BOOL=ON \
-DTrilinos_ENABLE_STKTopology:BOOL=ON \
-DTrilinos_ENABLE_STKUnit_test_utils=OFF \
-DTrilinos_ENABLE_Gtest:BOOL=ON \
-DTrilinos_ENABLE_STKClassic:BOOL=OFF \
-DTrilinos_ENABLE_SEACASExodus:BOOL=ON \
-DTrilinos_ENABLE_SEACASEpu:BOOL=ON \
-DTrilinos_ENABLE_SEACASExodiff:BOOL=ON \
-DTrilinos_ENABLE_SEACASNemspread:BOOL=ON \
-DTrilinos_ENABLE_SEACASNemslice:BOOL=ON \
  -DTPL_ENABLE_Netcdf:STRING=ON \
  -DTPL_Netcdf_LIBRARIES:PATH="${netcdf_install_dir}/lib/libnetcdf.a;${parallel_netcdf_install_dir}/lib/libpnetcdf.a;${hdf_install_dir}/lib/libhdf5_hl.a;${hdf_install_dir}/lib/libhdf5.a;${z_install_dir}/lib/libz.a" \
  -DNetcdf_INCLUDE_DIRS:PATH="${netcdf_install_dir}/include;${parallel_netcdf_install_dir}/include" \
  -DNetcdf_LIBRARY_DIRS:PATH="${netcdf_install_dir}/lib;${parallel_netcdf_install_dir}/lib" \
\
  -DTPL_ENABLE_HDF5:STRING=ON \
  -DHDF5_INCLUDE_DIRS:PATH="${hdf_install_dir}/include" \
  -DHDF5_LIBRARY_DIRS:PATH="${hdf_install_dir}/lib;${z_install_dir}/lib" \
  -DTPL_HDF5_LIBRARIES:PATH="${hdf_install_dir}/lib/libhdf5_hl.a;${hdf_install_dir}/lib/libhdf5.a;${z_install_dir}/lib/libz.a" \
\
  -DTPL_ENABLE_Zlib:STRING=ON \
  -DZlib_INCLUDE_DIRS:PATH="${z_install_dir}/include" \
  -DZlib_LIBRARY_DIRS:PATH="${z_install_dir}/lib" \
  -DTPL_Zlib_LIBRARIES:PATH="${z_install_dir}/lib/libz.a" \
\
  -DTPL_Netcdf_Enables_Netcdf4:BOOL=TRUE \
  -DTPL_Netcdf_PARALLEL:BOOL=ON \
\
  -DTPL_ENABLE_Boost:BOOL=ON \
  -DTPL_ENABLE_BoostLib:BOOL=ON \
  -DTPL_ENABLE_BoostAlbLib:BOOL=ON \
  -DBoost_INCLUDE_DIRS:PATH="$boost_dir/include" \
  -DBoost_LIBRARY_DIRS:PATH="$boost_dir/lib" \
  -DBoostLib_INCLUDE_DIRS:PATH="$boost_dir/include" \
  -DBoostLib_LIBRARY_DIRS:PATH="$boost_dir/lib" \
  -DBoostAlbLib_INCLUDE_DIRS:PATH="$boost_dir/include" \
  -DBoostAlbLib_LIBRARY_DIRS:PATH="$boost_dir/lib" \
\
  -DTrilinos_ASSERT_MISSING_PACKAGES=OFF \
\
  -DTPL_ENABLE_BLAS:BOOL=ON \
  -DTPL_ENABLE_LAPACK:BOOL=ON \
  -DBLAS_LIBRARY_DIRS:FILEPATH=${intel_mkl_dir} \
  -DTPL_BLAS_LIBRARIES:STRING="${intel_mkl_dir}/libmkl_intel_lp64.a;${intel_mkl_dir}/libmkl_sequential.a;${intel_mkl_dir}/libmkl_core.a" \
  -DLAPACK_LIBRARY_NAMES:STRING= \
  -DLAPACK_LIBRARY_DIRS:FILEPATH=${intel_mkl_dir} \
$EXTRA_ARGS \
../
